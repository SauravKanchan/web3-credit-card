/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../../contracts/MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_numConfirmationsRequired",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ConfirmTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "RevokeConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SubmitTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "getTransactionStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConfirmationsRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200168838038062001688833981016040819052620000349162000281565b60008251116200007d5760405162461bcd60e51b815260206004820152600f60248201526e1bdddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b6000811180156200008f575081518111155b620000ee5760405162461bcd60e51b815260206004820152602860248201527f696e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840162000074565b60005b8251811015620002435760008382815181106200011257620001126200035b565b6020026020010151905060006001600160a01b0316816001600160a01b031603620001705760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001ce5760405162461bcd60e51b815260206004820152601060248201526f6f776e6572206e6f7420756e6971756560801b604482015260640162000074565b6001600160a01b031660008181526001602081905260408220805460ff191682179055815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319169091179055806200023a8162000371565b915050620000f1565b506002555062000399565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027c57600080fd5b919050565b600080604083850312156200029557600080fd5b82516001600160401b0380821115620002ad57600080fd5b818501915085601f830112620002c257600080fd5b8151602082821115620002d957620002d96200024e565b8160051b604051601f19603f830116810181811086821117156200030157620003016200024e565b6040529283528183019350848101820192898411156200032057600080fd5b948201945b838610156200034957620003398662000264565b8552948201949382019362000325565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200039257634e487b7160e01b600052601160045260246000fd5b5060010190565b6112df80620003a96000396000f3fe6080604052600436106100d65760003560e01c806380f59a651161007f578063c01a8c8411610059578063c01a8c84146102a8578063c6427474146102c8578063d0549b85146102e8578063ee22610b146102fe57600080fd5b806380f59a651461022b5780639ace38c214610266578063a0e67e2b1461028657600080fd5b80632f54bf6e116100b05780632f54bf6e1461019a57806333ea3dc8146101da5780636bbc379d1461020b57600080fd5b8063025e7c271461011c57806320ea8d86146101595780632e7700f01461017b57600080fd5b36610117576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561012857600080fd5b5061013c610137366004610e3e565b61031e565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016557600080fd5b50610179610174366004610e3e565b610348565b005b34801561018757600080fd5b506004545b604051908152602001610150565b3480156101a657600080fd5b506101ca6101b5366004610e73565b60016020526000908152604090205460ff1681565b6040519015158152602001610150565b3480156101e657600080fd5b506101fa6101f5366004610e3e565b610542565b604051610150959493929190610edb565b34801561021757600080fd5b506101ca610226366004610e3e565b61063d565b34801561023757600080fd5b506101ca610246366004610f17565b600360209081526000928352604080842090915290825290205460ff1681565b34801561027257600080fd5b506101fa610281366004610e3e565b61066f565b34801561029257600080fd5b5061029b610748565b6040516101509190610f43565b3480156102b457600080fd5b506101796102c3366004610e3e565b6107aa565b3480156102d457600080fd5b506101796102e3366004610fa6565b6109c3565b3480156102f457600080fd5b5061018c60025481565b34801561030a57600080fd5b50610179610319366004610e3e565b610b77565b6000818154811061032e57600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166103985760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b600454819081106103df5760405162461bcd60e51b81526020600482015260116024820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604482015260640161038f565b81600481815481106103f3576103f3611071565b600091825260209091206003600590920201015460ff161561044d5760405162461bcd60e51b81526020600482015260136024820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604482015260640161038f565b60006004848154811061046257610462611071565b600091825260208083208784526003825260408085203386529092529220546005909102909101915060ff166104da5760405162461bcd60e51b815260206004820152601060248201527f7478206e6f7420636f6e6669726d656400000000000000000000000000000000604482015260640161038f565b60018160040160008282546104ef919061109d565b90915550506000848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b600080606060008060006004878154811061055f5761055f611071565b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906105a9906110b6565b80601f01602080910402602001604051908101604052809291908181526020018280546105d5906110b6565b80156106225780601f106105f757610100808354040283529160200191610622565b820191906000526020600020905b81548152906001019060200180831161060557829003601f168201915b50505050509250955095509550955095505091939590929450565b60006004828154811061065257610652611071565b600091825260209091206003600590920201015460ff1692915050565b6004818154811061067f57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b0390931694509092916106b5906110b6565b80601f01602080910402602001604051908101604052809291908181526020018280546106e1906110b6565b801561072e5780601f106107035761010080835404028352916020019161072e565b820191906000526020600020905b81548152906001019060200180831161071157829003601f168201915b505050506003830154600490930154919260ff1691905085565b606060008054806020026020016040519081016040528092919081815260200182805480156107a057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610782575b5050505050905090565b3360009081526001602052604090205460ff166107f55760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161038f565b6004548190811061083c5760405162461bcd60e51b81526020600482015260116024820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604482015260640161038f565b816004818154811061085057610850611071565b600091825260209091206003600590920201015460ff16156108aa5760405162461bcd60e51b81526020600482015260136024820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604482015260640161038f565b6000838152600360209081526040808320338452909152902054839060ff16156109165760405162461bcd60e51b815260206004820152601460248201527f747820616c726561647920636f6e6669726d6564000000000000000000000000604482015260640161038f565b60006004858154811061092b5761092b611071565b90600052602060002090600502019050600181600401600082825461095091906110f0565b909155505060008581526003602090815260408083203384529091529020805460ff1916600117905560025460048201540361098f5761098f85610b77565b604051859033907f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004190600090a35050505050565b3360009081526001602052604090205460ff16610a0e5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161038f565b600480546040805160a0810182526001600160a01b03878116825260208201878152928201868152600060608401819052608084018190526001860187559590955281517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6005860290810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169290931691909117825592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c84015593519293909290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d0190610b039082611152565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d90610b699088908890611212565b60405180910390a450505050565b3360009081526001602052604090205460ff16610bc25760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161038f565b60045481908110610c095760405162461bcd60e51b81526020600482015260116024820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604482015260640161038f565b8160048181548110610c1d57610c1d611071565b600091825260209091206003600590920201015460ff1615610c775760405162461bcd60e51b81526020600482015260136024820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604482015260640161038f565b600060048481548110610c8c57610c8c611071565b60009182526020909120600590910201600381015490915060ff1615610cea5760405162461bcd60e51b81526020600482015260136024820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604482015260640161038f565b60025481600401541015610d405760405162461bcd60e51b815260206004820152601160248201527f63616e6e6f742065786563757465207478000000000000000000000000000000604482015260640161038f565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610d77906002860190611233565b60006040518083038185875af1925050503d8060008114610db4576040519150601f19603f3d011682016040523d82523d6000602084013e610db9565b606091505b5050905080610e0a5760405162461bcd60e51b815260206004820152600960248201527f7478206661696c65640000000000000000000000000000000000000000000000604482015260640161038f565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b600060208284031215610e5057600080fd5b5035919050565b80356001600160a01b0381168114610e6e57600080fd5b919050565b600060208284031215610e8557600080fd5b610e8e82610e57565b9392505050565b6000815180845260005b81811015610ebb57602081850181015186830182015201610e9f565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038616815284602082015260a060408201526000610f0360a0830186610e95565b931515606083015250608001529392505050565b60008060408385031215610f2a57600080fd5b82359150610f3a60208401610e57565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610f845783516001600160a01b031683529284019291840191600101610f5f565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610fbb57600080fd5b610fc484610e57565b925060208401359150604084013567ffffffffffffffff80821115610fe857600080fd5b818601915086601f830112610ffc57600080fd5b81358181111561100e5761100e610f90565b604051601f8201601f19908116603f0116810190838211818310171561103657611036610f90565b8160405282815289602084870101111561104f57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156110b0576110b0611087565b92915050565b600181811c908216806110ca57607f821691505b6020821081036110ea57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156110b0576110b0611087565b601f82111561114d57600081815260208120601f850160051c8101602086101561112a5750805b601f850160051c820191505b8181101561114957828155600101611136565b5050505b505050565b815167ffffffffffffffff81111561116c5761116c610f90565b6111808161117a84546110b6565b84611103565b602080601f8311600181146111b5576000841561119d5750858301515b600019600386901b1c1916600185901b178555611149565b600085815260208120601f198616915b828110156111e4578886015182559484019460019091019084016111c5565b50858210156112025787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061122b6040830184610e95565b949350505050565b6000808354611241816110b6565b60018281168015611259576001811461126e5761129d565b60ff198416875282151583028701945061129d565b8760005260208060002060005b858110156112945781548a82015290840190820161127b565b50505082870194505b5092969550505050505056fea264697066735822122010b9967020bb2e80d2b0664d07e95726c9bde8d223ecefc07e4ea78038414ca164736f6c63430008120033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: PromiseOrValue<string>[],
    _numConfirmationsRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWallet> {
    return super.deploy(
      _owners,
      _numConfirmationsRequired,
      overrides || {}
    ) as Promise<MultiSigWallet>;
  }
  override getDeployTransaction(
    _owners: PromiseOrValue<string>[],
    _numConfirmationsRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owners,
      _numConfirmationsRequired,
      overrides || {}
    );
  }
  override attach(address: string): MultiSigWallet {
    return super.attach(address) as MultiSigWallet;
  }
  override connect(signer: Signer): MultiSigWallet__factory {
    return super.connect(signer) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new utils.Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MultiSigWallet;
  }
}
