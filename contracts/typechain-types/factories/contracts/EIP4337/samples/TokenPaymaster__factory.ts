/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenPaymaster,
  TokenPaymasterInterface,
  OracleHelper,
  UniswapHelper,
} from "../../../../contracts/EIP4337/samples/TokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_wrappedNative",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_uniswap",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minEntryPointBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refundPostopCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceMaxAge",
            type: "uint256",
          },
        ],
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "_tokenPaymasterConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IOracle",
            name: "tokenOracle",
            type: "address",
          },
          {
            internalType: "contract IOracle",
            name: "nativeOracle",
            type: "address",
          },
          {
            internalType: "bool",
            name: "tokenToNativeOracle",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "tokenOracleReverse",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "nativeOracleReverse",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "priceUpdateThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cacheTimeToLive",
            type: "uint256",
          },
        ],
        internalType: "struct OracleHelper.OracleHelperConfig",
        name: "_oracleHelperConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minSwapAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "uniswapPoolFee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "slippage",
            type: "uint8",
          },
        ],
        internalType: "struct UniswapHelper.UniswapHelperConfig",
        name: "_uniswapHelperConfig",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minEntryPointBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refundPostopCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceMaxAge",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "tokenPaymasterConfig",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "preCharge",
        type: "uint256",
      },
    ],
    name: "PostOpReverted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cachedPriceTimestamp",
        type: "uint256",
      },
    ],
    name: "TokenPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
    ],
    name: "UniswapReverted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenCharge",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenPrice",
        type: "uint256",
      },
    ],
    name: "UserOperationSponsored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedPriceTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minEntryPointBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refundPostopCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceMaxAge",
            type: "uint256",
          },
        ],
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "_tokenPaymasterConfig",
        type: "tuple",
      },
    ],
    name: "setTokenPaymasterConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minSwapAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "uniswapPoolFee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "slippage",
            type: "uint8",
          },
        ],
        internalType: "struct UniswapHelper.UniswapHelperConfig",
        name: "_uniswapHelperConfig",
        type: "tuple",
      },
    ],
    name: "setUniswapConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "tokenToWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswap",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
    ],
    name: "updateCachedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "weiToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162002c9638038062002c968339810160408190526200003591620007fb565b828887878b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000078573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009e9190620008e9565b620000ab90600a62000a23565b868c620000b833620001d1565b6001600160a01b0390811660805260405163095ea7b360e01b8152848216600482015260001960248201529086169063095ea7b3906044016020604051808303816000875af115801562000110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000136919062000a34565b506001600160a01b0380861660c05284811660e052831660a0526101008290526200019481805160015560208101516002805460409093015160ff1663010000000263ffffffff1990931662ffffff90921691909117919091179055565b505060001960035550620001ac915082905062000221565b50620001b88462000413565b620001c38162000552565b505050505050505062000a6c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051600580546001600160a01b039283166001600160a01b03199091161790556020820151600680546040850151606086015160808701511515600160b01b0260ff60b01b19911515600160a81b029190911661ffff60a81b19921515600160a01b026001600160a81b0319909416959096169490941791909117169290921717905560a0810151600781905560c0820151600855620f424010156200030e5760405162461bcd60e51b815260206004820152601e60248201527f54504d3a20757064617465207468726573686f6c6420746f6f2068696768000060448201526064015b60405180910390fd5b6005546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801562000359573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037f9190620008e9565b6200038c90600a62000a23565b6009556006546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015620003da573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004009190620008e9565b6200040d90600a62000a23565b600a5550565b6200041d620005d1565b620004356a52b7d2dcc80cd2e4000000600262000a52565b81511115620004875760405162461bcd60e51b815260206004820152601a60248201527f54504d3a207072696365206d61726b757020746f6f2068696768000000000000604482015260640162000305565b80516a52b7d2dcc80cd2e40000001115620004e55760405162461bcd60e51b815260206004820152601960248201527f54504d3a207072696365206d61726b757020746f6f206c6f7700000000000000604482015260640162000305565b8051600b81905560208083018051600c5560408085018051600d5560608087018051600e558351968752935194860194909452519084015251908201527f9359e69ea224934f7cfbc6e6336e1a65f96eb6607c898f94589b52f4806eece89060800160405180910390a150565b6200055c620005d1565b6001600160a01b038116620005c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000305565b620005ce81620001d1565b50565b6000546001600160a01b031633146200062d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000305565b565b6001600160a01b0381168114620005ce57600080fd5b604051608081016001600160401b03811182821017156200067657634e487b7160e01b600052604160045260246000fd5b60405290565b805180151581146200068d57600080fd5b919050565b600060e08284031215620006a557600080fd5b60405160e081016001600160401b0381118282101715620006d657634e487b7160e01b600052604160045260246000fd5b80604052508091508251620006eb816200062f565b81526020830151620006fd816200062f565b602082015262000710604084016200067c565b604082015262000723606084016200067c565b606082015262000736608084016200067c565b608082015260a083015160a082015260c083015160c08201525092915050565b805160ff811681146200068d57600080fd5b6000606082840312156200077b57600080fd5b604051606081016001600160401b0381118282101715620007ac57634e487b7160e01b600052604160045260246000fd5b806040525080915082518152602083015162ffffff81168114620007cf57600080fd5b6020820152620007e26040840162000756565b60408201525092915050565b80516200068d816200062f565b600080600080600080600080888a036102608112156200081a57600080fd5b895162000827816200062f565b60208b01519099506200083a816200062f565b60408b01519098506200084d816200062f565b60608b015190975062000860816200062f565b95506080607f19820112156200087557600080fd5b506200088062000645565b60808a0151815260a08a0151602082015260c08a0151604082015260e08a015160608201529350620008b78a6101008b0162000692565b9250620008c98a6101e08b0162000768565b9150620008da6102408a01620007ee565b90509295985092959890939650565b600060208284031215620008fc57600080fd5b620009078262000756565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620009655781600019048211156200094957620009496200090e565b808516156200095757918102915b93841c939080029062000929565b509250929050565b6000826200097e5750600162000a1d565b816200098d5750600062000a1d565b8160018114620009a65760028114620009b157620009d1565b600191505062000a1d565b60ff841115620009c557620009c56200090e565b50506001821b62000a1d565b5060208310610133831016604e8410600b8410161715620009f6575081810a62000a1d565b62000a02838362000924565b806000190482111562000a195762000a196200090e565b0290505b92915050565b60006200090760ff8416836200096d565b60006020828403121562000a4757600080fd5b62000907826200067c565b808202811582820484141762000a1d5762000a1d6200090e565b60805160a05160c05160e0516101005161217162000b25600039600050506000818161041a01526117c40152600081816104b20152818161080c01528181611195015281816111cf0152818161135f015261160401526000818161020c0152818161183001526119aa01526000818161033e01528181610510015281816105c0015281816108a20152818161094f015281816109c701528181610b90015281816110440152818161157d015261164901526121716000f3fe6080604052600436106101845760003560e01c8063bb9fe6bf116100d6578063e1d8153c1161007f578063f465c77e11610059578063f465c77e1461045c578063f60fdcb31461048a578063fc0c546a146104a057600080fd5b8063e1d8153c146103f2578063eb6d3a1114610408578063f2fde38b1461043c57600080fd5b8063c63dcf6a116100b0578063c63dcf6a146103aa578063d0e30db0146103ca578063d7a23b3c146103d257600080fd5b8063bb9fe6bf14610360578063c23a5cea14610375578063c399ec881461039557600080fd5b80637c986aac11610138578063a0840fa711610112578063a0840fa7146102ec578063a9a234091461030c578063b0d691fe1461032c57600080fd5b80637c986aac1461028e5780638da5cb5b146102ae5780639e281a98146102cc57600080fd5b80632681f7e4116101695780632681f7e4146101fa5780633ba9290f1461024b578063715018a61461027957600080fd5b80630396cb60146101c5578063205c2878146101da57600080fd5b366101c05760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b6101d86101d3366004611ba7565b6104d4565b005b3480156101e657600080fd5b506101d86101f5366004611be9565b610579565b34801561020657600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561025757600080fd5b5061026b610266366004611c23565b610604565b604051908152602001610242565b34801561028557600080fd5b506101d86107c0565b34801561029a57600080fd5b5061026b6102a9366004611c40565b6107d4565b3480156102ba57600080fd5b506000546001600160a01b031661022e565b3480156102d857600080fd5b506101d86102e7366004611be9565b6107ff565b3480156102f857600080fd5b506101d8610307366004611c62565b610836565b34801561031857600080fd5b506101d8610327366004611ce7565b61087e565b34801561033857600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036c57600080fd5b506101d8610898565b34801561038157600080fd5b506101d8610390366004611d76565b61090f565b3480156103a157600080fd5b5061026b6109af565b3480156103b657600080fd5b506101d86103c5366004611d93565b610a3f565b6101d8610b7b565b3480156103de57600080fd5b5061026b6103ed366004611c40565b610bdd565b3480156103fe57600080fd5b5061026b60045481565b34801561041457600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044857600080fd5b506101d8610457366004611d76565b610bf5565b34801561046857600080fd5b5061047c610477366004611e07565b610c82565b604051610242929190611eab565b34801561049657600080fd5b5061026b60035481565b3480156104ac57600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b6104dc610ca5565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050505050565b610581610ca5565b6040517f205c28780000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561055d57600080fd5b60085460045460009190829061061a9042611ee3565b90508315801561062a5750818111155b1561063a57505060035492915050565b6007546005546006546003546001600160a01b039283169290911690600061066184610cff565b60065490915060019074010000000000000000000000000000000000000000900460ff166106955761069284610cff565b90505b6006546000906106e1908490849060ff75010000000000000000000000000000000000000000008204811691760100000000000000000000000000000000000000000000900416610e90565b90506000846106fb6a52b7d2dcc80cd2e400000084611ef6565b6107059190611f23565b905060008c806107285750610725896a52b7d2dcc80cd2e4000000611f45565b82115b806107465750610743896a52b7d2dcc80cd2e4000000611ee3565b82105b90508061075e5750939b9a5050505050505050505050565b6003839055426004819055604080518581526020810189905290810191909152929586937ed4fe314618b73a96886b87817a53a5ed51433b0234c85a5e9dafe2cb7b88429060600160405180910390a150949c9b505050505050505050505050565b6107c8610ca5565b6107d26000610f23565b565b6000816107ec6a52b7d2dcc80cd2e400000085611ef6565b6107f69190611f23565b90505b92915050565b610807610ca5565b6108327f00000000000000000000000000000000000000000000000000000000000000008383610f8b565b5050565b61083e610ca5565b61087b81805160015560208101516002805460409093015160ff1663010000000263ffffffff1990931662ffffff90921691909117919091179055565b50565b610886611039565b610892848484846110b1565b50505050565b6108a0610ca5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108fb57600080fd5b505af1158015610892573d6000803e3d6000fd5b610917610ca5565b6040517fc23a5cea0000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea906024015b600060405180830381600087803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190611f58565b905090565b610a47610ca5565b610a5d6a52b7d2dcc80cd2e40000006002611ef6565b81511115610ab25760405162461bcd60e51b815260206004820152601a60248201527f54504d3a207072696365206d61726b757020746f6f206869676800000000000060448201526064015b60405180910390fd5b80516a52b7d2dcc80cd2e40000001115610b0e5760405162461bcd60e51b815260206004820152601960248201527f54504d3a207072696365206d61726b757020746f6f206c6f77000000000000006044820152606401610aa9565b8051600b81905560208083018051600c5560408085018051600d5560608087018051600e558351968752935194860194909452519084015251908201527f9359e69ea224934f7cfbc6e6336e1a65f96eb6607c898f94589b52f4806eece89060800160405180910390a150565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561099457600080fd5b60006a52b7d2dcc80cd2e40000006107ec8385611ef6565b610bfd610ca5565b6001600160a01b038116610c795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610aa9565b61087b81610f23565b60606000610c8e611039565b610c9985858561125d565b91509150935093915050565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aa9565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d699190611f90565b94509450509350935060008313610dc25760405162461bcd60e51b815260206004820152601960248201527f54504d3a20436861696e6c696e6b207072696365203c3d2030000000000000006044820152606401610aa9565b610dcf6202a30042611ee3565b821015610e1e5760405162461bcd60e51b815260206004820152601560248201527f54504d3a20496e636f6d706c65746520726f756e6400000000000000000000006044820152606401610aa9565b8369ffffffffffffffffffff168169ffffffffffffffffffff161015610e865760405162461bcd60e51b815260206004820152601060248201527f54504d3a205374616c65207072696365000000000000000000000000000000006044820152606401610aa9565b5090949350505050565b60008215610ec357846009546a52b7d2dcc80cd2e4000000610eb29190611ef6565b610ebc9190611f23565b9450610ee8565b600954610edb866a52b7d2dcc80cd2e4000000611ef6565b610ee59190611f23565b94505b8115610f0c57600a54610efb8686611ef6565b610f059190611f23565b9050610f1b565b83600a5486610efb9190611ef6565b949350505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526110349084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611409565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107d25760405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606401610aa9565b600b5460008080806110c587890189611fe0565b935093509350935060006110d984846114f1565b905060028a60028111156110ef576110ef612021565b0361114257816001600160a01b03167f70d0284ddd39eacb3395a2e94c4dc76dfad486bb418b24573ca1c9097501d57e8660405161112f91815260200190565b60405180910390a2505050505050610892565b600061114e6000610604565b90506000876a52b7d2dcc80cd2e400000083028161116e5761116e611f0d565b600d54919004915083028901600061118682846107d4565b9050808911156111c2576111bd7f000000000000000000000000000000000000000000000000000000000000000087838c03610f8b565b6111f8565b808910156111f8576111f87f000000000000000000000000000000000000000000000000000000000000000087308c8503611514565b60408051828152602081018d90529081018590526001600160a01b038716907f46caa0511cf037f06f57a0bf273a2ff04229f5b12fb04675234a6cbe2e7f1a899060600160405180910390a261124d84611565565b5050505050505050505050505050565b600b54606090600090816014611277610120890189612037565b9050039050806000148061128b5750806020145b6112d75760405162461bcd60e51b815260206004820152601860248201527f54504d3a20696e76616c69642064617461206c656e67746800000000000000006044820152606401610aa9565b60008760e00135600b6002015402860190506000836a52b7d2dcc80cd2e4000000600354028161130957611309611f0d565b0490508260200361134c5760006113246101208b018b612037565b61133391603491601491612085565b61133c916120af565b90508181101561134a578091505b505b600061135883836107d4565b90506113927f000000000000000000000000000000000000000000000000000000000000000061138b60208d018d611d76565b3084611514565b8060e08b01356101008c01356113ab60208e018e611d76565b60408051602081019590955284019290925260608301526001600160a01b0316608082015260a00160405160208183030381529060405296506113fa6000600b600301546004540160006116b4565b95505050505050935093915050565b600061145e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116ec9092919063ffffffff16565b905080516000148061147f57508080602001905181019061147f91906120cd565b6110345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610aa9565b60008183036115015750816107f9565b6107f68361150f4885611f45565b6116fb565b6040516001600160a01b03808516602483015283166044820152606481018290526108929085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610fd0565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f09190611f58565b600c549091508110156108325760006116297f000000000000000000000000000000000000000000000000000000000000000084611711565b9050611634816117fb565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99047906024016000604051808303818588803b15801561169657600080fd5b505af11580156116aa573d6000803e3d6000fd5b5050505050505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b856116dc5760006116df565b60015b60ff161717949350505050565b6060610f1b8484600085611867565b600081831061170a57816107f6565b5090919050565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a0823190602401602060405180830381865afa15801561175a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177e9190611f58565b905060006117a161178f8386610bdd565b6002546301000000900460ff16611959565b6001549091508110156117b9576000925050506107f9565b6002546117f29086907f0000000000000000000000000000000000000000000000000000000000000000908590859062ffffff16611979565b95945050505050565b6040517f49404b7c000000000000000000000000000000000000000000000000000000008152600481018290523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349404b7c9060440161097a565b6060824710156118df5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610aa9565b600080866001600160a01b031685876040516118fb91906120ea565b60006040518083038185875af1925050503d8060008114611938576040519150601f19603f3d011682016040523d82523d6000602084013e61193d565b606091505b509150915061194e87838387611b09565b979650505050505050565b60006103e861196b60ff841682612106565b6107ec9061ffff1685611ef6565b60408051610100810182526001600160a01b0387811682528681166020830190815262ffffff8581168486019081527f0000000000000000000000000000000000000000000000000000000000000000841660608601818152426080880190815260a088018c815260c089018c8152600060e08b018181529b517f414bf3890000000000000000000000000000000000000000000000000000000081528b518b16600482015298518a1660248a0152955190961660448801529151871660648701525160848601525160a4850152915160c4840152945190921660e482015263414bf38990610104016020604051808303816000875af1925050508015611a9d575060408051601f3d908101601f19168201909252611a9a91810190611f58565b60015b611afc57604080516001600160a01b03808a16825288166020820152908101869052606081018590527ff7edd4c6ec425decf715a8b8eaa3b65d3d86e31ad0ff750aa60fa834190f515f9060800160405180910390a160009150611aff565b91505b5095945050505050565b60608315611b78578251600003611b71576001600160a01b0385163b611b715760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610aa9565b5081610f1b565b610f1b8383815115611b8d5781518083602001fd5b8060405162461bcd60e51b8152600401610aa99190612128565b600060208284031215611bb957600080fd5b813563ffffffff81168114611bcd57600080fd5b9392505050565b6001600160a01b038116811461087b57600080fd5b60008060408385031215611bfc57600080fd5b8235611c0781611bd4565b946020939093013593505050565b801515811461087b57600080fd5b600060208284031215611c3557600080fd5b8135611bcd81611c15565b60008060408385031215611c5357600080fd5b50508035926020909101359150565b600060608284031215611c7457600080fd5b6040516060810181811067ffffffffffffffff82111715611ca557634e487b7160e01b600052604160045260246000fd5b60405282358152602083013562ffffff81168114611cc257600080fd5b6020820152604083013560ff81168114611cdb57600080fd5b60408201529392505050565b60008060008060608587031215611cfd57600080fd5b843560038110611d0c57600080fd5b9350602085013567ffffffffffffffff80821115611d2957600080fd5b818701915087601f830112611d3d57600080fd5b813581811115611d4c57600080fd5b886020828501011115611d5e57600080fd5b95986020929092019750949560400135945092505050565b600060208284031215611d8857600080fd5b8135611bcd81611bd4565b600060808284031215611da557600080fd5b6040516080810181811067ffffffffffffffff82111715611dd657634e487b7160e01b600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b600080600060608486031215611e1c57600080fd5b833567ffffffffffffffff811115611e3357600080fd5b84016101608187031215611e4657600080fd5b95602085013595506040909401359392505050565b60005b83811015611e76578181015183820152602001611e5e565b50506000910152565b60008151808452611e97816020860160208601611e5b565b601f01601f19169290920160200192915050565b604081526000611ebe6040830185611e7f565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107f9576107f9611ecd565b80820281158282048414176107f9576107f9611ecd565b634e487b7160e01b600052601260045260246000fd5b600082611f4057634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156107f9576107f9611ecd565b600060208284031215611f6a57600080fd5b5051919050565b805169ffffffffffffffffffff81168114611f8b57600080fd5b919050565b600080600080600060a08688031215611fa857600080fd5b611fb186611f71565b9450602086015193506040860151925060608601519150611fd460808701611f71565b90509295509295909350565b60008060008060808587031215611ff657600080fd5b843593506020850135925060408501359150606085013561201681611bd4565b939692955090935050565b634e487b7160e01b600052602160045260246000fd5b6000808335601e1984360301811261204e57600080fd5b83018035915067ffffffffffffffff82111561206957600080fd5b60200191503681900382131561207e57600080fd5b9250929050565b6000808585111561209557600080fd5b838611156120a257600080fd5b5050820193919092039150565b803560208310156107f957600019602084900360031b1b1692915050565b6000602082840312156120df57600080fd5b8151611bcd81611c15565b600082516120fc818460208701611e5b565b9190910192915050565b61ffff82811682821603908082111561212157612121611ecd565b5092915050565b6020815260006107f66020830184611e7f56fea2646970667358221220fd8e0639fd6da8dadc80760eb7bbe4f7161e363c68235f127f1c491f445415da64736f6c63430008120033";

type TokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _uniswap: PromiseOrValue<string>,
    _tokenPaymasterConfig: TokenPaymaster.TokenPaymasterConfigStruct,
    _oracleHelperConfig: OracleHelper.OracleHelperConfigStruct,
    _uniswapHelperConfig: UniswapHelper.UniswapHelperConfigStruct,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenPaymaster> {
    return super.deploy(
      _token,
      _entryPoint,
      _wrappedNative,
      _uniswap,
      _tokenPaymasterConfig,
      _oracleHelperConfig,
      _uniswapHelperConfig,
      _owner,
      overrides || {}
    ) as Promise<TokenPaymaster>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _uniswap: PromiseOrValue<string>,
    _tokenPaymasterConfig: TokenPaymaster.TokenPaymasterConfigStruct,
    _oracleHelperConfig: OracleHelper.OracleHelperConfigStruct,
    _uniswapHelperConfig: UniswapHelper.UniswapHelperConfigStruct,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _entryPoint,
      _wrappedNative,
      _uniswap,
      _tokenPaymasterConfig,
      _oracleHelperConfig,
      _uniswapHelperConfig,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): TokenPaymaster {
    return super.attach(address) as TokenPaymaster;
  }
  override connect(signer: Signer): TokenPaymaster__factory {
    return super.connect(signer) as TokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymaster {
    return new Contract(address, _abi, signerOrProvider) as TokenPaymaster;
  }
}
