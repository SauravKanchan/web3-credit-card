/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TokenCallbackHandler,
  TokenCallbackHandlerInterface,
} from "../../../../../contracts/EIP4337/samples/callback/TokenCallbackHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610527806100206000396000f3fe608060405234801561001057600080fd5b50600436106100665760003560e01c8063150b7a0211610050578063150b7a02146100ad578063bc197c81146100e5578063f23a6e611461012057600080fd5b806223de291461006b57806301ffc9a714610085575b600080fd5b61008361007936600461024f565b5050505050505050565b005b6100986100933660046102fa565b610159565b60405190151581526020015b60405180910390f35b6100cc6100bb36600461032b565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100a4565b6100cc6100f33660046103df565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6100cc61012e366004610479565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006001600160e01b03198216630a85bd0160e11b14806101a357506001600160e01b031982167f4e2312e000000000000000000000000000000000000000000000000000000000145b806101d757506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461020157600080fd5b919050565b60008083601f84011261021857600080fd5b50813567ffffffffffffffff81111561023057600080fd5b60208301915083602082850101111561024857600080fd5b9250929050565b60008060008060008060008060c0898b03121561026b57600080fd5b610274896101dd565b975061028260208a016101dd565b965061029060408a016101dd565b955060608901359450608089013567ffffffffffffffff808211156102b457600080fd5b6102c08c838d01610206565b909650945060a08b01359150808211156102d957600080fd5b506102e68b828c01610206565b999c989b5096995094979396929594505050565b60006020828403121561030c57600080fd5b81356001600160e01b03198116811461032457600080fd5b9392505050565b60008060008060006080868803121561034357600080fd5b61034c866101dd565b945061035a602087016101dd565b935060408601359250606086013567ffffffffffffffff81111561037d57600080fd5b61038988828901610206565b969995985093965092949392505050565b60008083601f8401126103ac57600080fd5b50813567ffffffffffffffff8111156103c457600080fd5b6020830191508360208260051b850101111561024857600080fd5b60008060008060008060008060a0898b0312156103fb57600080fd5b610404896101dd565b975061041260208a016101dd565b9650604089013567ffffffffffffffff8082111561042f57600080fd5b61043b8c838d0161039a565b909850965060608b013591508082111561045457600080fd5b6104608c838d0161039a565b909650945060808b01359150808211156102d957600080fd5b60008060008060008060a0878903121561049257600080fd5b61049b876101dd565b95506104a9602088016101dd565b94506040870135935060608701359250608087013567ffffffffffffffff8111156104d357600080fd5b6104df89828a01610206565b979a969950949750929593949250505056fea2646970667358221220c18d51a6dae33972a6e0b8ea6478c90a9795a0263355d89f82bdc4640db23ffb64736f6c63430008120033";

type TokenCallbackHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenCallbackHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenCallbackHandler__factory extends ContractFactory {
  constructor(...args: TokenCallbackHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenCallbackHandler> {
    return super.deploy(overrides || {}) as Promise<TokenCallbackHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenCallbackHandler {
    return super.attach(address) as TokenCallbackHandler;
  }
  override connect(signer: Signer): TokenCallbackHandler__factory {
    return super.connect(signer) as TokenCallbackHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenCallbackHandlerInterface {
    return new utils.Interface(_abi) as TokenCallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenCallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenCallbackHandler;
  }
}
