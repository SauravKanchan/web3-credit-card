/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LegacyTokenPaymaster,
  LegacyTokenPaymasterInterface,
} from "../../../../contracts/EIP4337/samples/LegacyTokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "theFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001e2b38038062001e2b833981016040819052620000349162000327565b8180826200004233620000a0565b6001600160a01b031660805260046200005c8382620004b2565b5060056200006b8282620004b2565b5050506001600160a01b03831660a05262000088306001620000f0565b620000973033600019620001b9565b505050620005a6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166200014c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600360008282546200016091906200057e565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0383166200021d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000143565b6001600160a01b038216620002805760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000143565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b505050565b6001600160a01b0381168114620002fc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80516200032281620002e6565b919050565b6000806000606084860312156200033d57600080fd5b83516200034a81620002e6565b602085810151919450906001600160401b03808211156200036a57600080fd5b818701915087601f8301126200037f57600080fd5b815181811115620003945762000394620002ff565b604051601f8201601f19908116603f01168101908382118183101715620003bf57620003bf620002ff565b816040528281528a86848701011115620003d857600080fd5b600093505b82841015620003fc5784840186015181850187015292850192620003dd565b60008684830101528097505050505050506200041b6040850162000315565b90509250925092565b600181811c908216806200043957607f821691505b6020821081036200045a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e157600081815260208120601f850160051c81016020861015620004895750805b601f850160051c820191505b81811015620004aa5782815560010162000495565b505050505050565b81516001600160401b03811115620004ce57620004ce620002ff565b620004e681620004df845462000424565b8462000460565b602080601f8311600181146200051e5760008415620005055750858301515b600019600386901b1c1916600185901b178555620004aa565b600085815260208120601f198616915b828110156200054f578886015182559484019460019091019084016200052e565b50858210156200056e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620005a057634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a051611827620006046000396000818161036b01526113b70152600081816103ff01528181610563015281816106bf0152818161086a01528181610917015281816109a701528181610a4d0152610fb601526118276000f3fe6080604052600436106101a15760003560e01c80639f5ca221116100e1578063c23a5cea1161008a578063dd62ed3e11610064578063dd62ed3e14610473578063f0dda65c146104b9578063f2fde38b146104d9578063f465c77e146104f957600080fd5b8063c23a5cea14610436578063c399ec8814610456578063d0e30db01461046b57600080fd5b8063a9a23409116100bb578063a9a23409146103cd578063b0d691fe146103ed578063bb9fe6bf1461042157600080fd5b80639f5ca22114610359578063a457c2d71461038d578063a9059cbb146103ad57600080fd5b8063313ce5671161014e578063715018a611610128578063715018a6146102e7578063796d4371146102fc5780638da5cb5b1461031257806395d89b411461034457600080fd5b8063313ce56714610275578063395093511461029157806370a08231146102b157600080fd5b806318160ddd1161017f57806318160ddd14610216578063205c28781461023557806323b872dd1461025557600080fd5b80630396cb60146101a657806306fdde03146101bb578063095ea7b3146101e6575b600080fd5b6101b96101b436600461144b565b610527565b005b3480156101c757600080fd5b506101d06105cc565b6040516101dd91906114be565b60405180910390f35b3480156101f257600080fd5b506102066102013660046114e6565b61065e565b60405190151581526020016101dd565b34801561022257600080fd5b506003545b6040519081526020016101dd565b34801561024157600080fd5b506101b96102503660046114e6565b610678565b34801561026157600080fd5b50610206610270366004611512565b610703565b34801561028157600080fd5b50604051601281526020016101dd565b34801561029d57600080fd5b506102066102ac3660046114e6565b610727565b3480156102bd57600080fd5b506102276102cc366004611553565b6001600160a01b031660009081526001602052604090205490565b3480156102f357600080fd5b506101b9610766565b34801561030857600080fd5b50610227613a9881565b34801561031e57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101dd565b34801561035057600080fd5b506101d061077a565b34801561036557600080fd5b5061032c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039957600080fd5b506102066103a83660046114e6565b610789565b3480156103b957600080fd5b506102066103c83660046114e6565b610838565b3480156103d957600080fd5b506101b96103e8366004611570565b610846565b3480156103f957600080fd5b5061032c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561042d57600080fd5b506101b9610860565b34801561044257600080fd5b506101b9610451366004611553565b6108d7565b34801561046257600080fd5b50610227610976565b6101b9610a1f565b34801561047f57600080fd5b5061022761048e3660046115ff565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104c557600080fd5b506101b96104d43660046114e6565b610a9a565b3480156104e557600080fd5b506101b96104f4366004611553565b610ab0565b34801561050557600080fd5b50610519610514366004611638565b610aee565b6040516101dd92919061168c565b61052f610b11565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156105b057600080fd5b505af11580156105c4573d6000803e3d6000fd5b505050505050565b6060600480546105db906116ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610607906116ae565b80156106545780601f1061062957610100808354040283529160200191610654565b820191906000526020600020905b81548152906001019060200180831161063757829003601f168201915b5050505050905090565b60003361066c818585610b6b565b60019150505b92915050565b610680610b11565b6040517f205c28780000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156105b057600080fd5b600033610711858285610cc3565b61071c858585610d4f565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490919061066c90829086906107619087906116e8565b610b6b565b61076e610b11565b6107786000610f43565b565b6060600580546105db906116ae565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091908381101561082b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61071c8286868403610b6b565b60003361066c818585610d4f565b61084e610fab565b61085a84848484611023565b50505050565b610868610b11565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108c357600080fd5b505af115801561085a573d6000803e3d6000fd5b6108df610b11565b6040517fc23a5cea0000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561095b57600080fd5b505af115801561096f573d6000803e3d6000fd5b5050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a9190611709565b905090565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561095b57600080fd5b610aa2610b11565b610aac8282611056565b5050565b610ab8610b11565b610ad530610ace6000546001600160a01b031690565b6000610b6b565b610ade81611117565b610aeb3082600019610b6b565b50565b60606000610afa610fab565b610b058585856111a4565b91509150935093915050565b6000546001600160a01b031633146107785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b6001600160a01b038316610be65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b038216610c625760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260026020908152604080832093861683529290522054600019811461085a5781811015610d425760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610822565b61085a8484848403610b6b565b6001600160a01b038316610dcb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b038216610e475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b03831660009081526001602052604090205481811015610ed65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f369086815260200190565b60405180910390a361085a565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107785760405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606401610822565b600061103183850185611553565b90506000611049611044613a98856116e8565b611374565b90506105c4823083610d4f565b6001600160a01b0382166110ac5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610822565b80600360008282546110be91906116e8565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61111f610b11565b6001600160a01b03811661119b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610822565b610aeb81610f43565b60606000806111b284611374565b9050613a988660a001351161122f5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f722060448201527f706f73744f7000000000000000000000000000000000000000000000000000006064820152608401610822565b61123c6040870187611722565b1590506112d65761124c86611381565b8061125d6102cc6020890189611553565b10156112d15760405162461bcd60e51b815260206004820152602760248201527f546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d60448201527f63726561746529000000000000000000000000000000000000000000000000006064820152608401610822565b611335565b806112e76102cc6020890189611553565b10156113355760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e5061796d61737465723a206e6f2062616c616e63650000000000006044820152606401610822565b6113426020870187611553565b604080516001600160a01b0390921660208301520160408051601f198184030181529190529660009650945050505050565b6000610672606483611770565b60006113906040830183611722565b61139f91601491600091611792565b6113a8916117bc565b60601c90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168114610aac5760405162461bcd60e51b815260206004820152602560248201527f546f6b656e5061796d61737465723a2077726f6e67206163636f756e7420666160448201527f63746f72790000000000000000000000000000000000000000000000000000006064820152608401610822565b60006020828403121561145d57600080fd5b813563ffffffff8116811461147157600080fd5b9392505050565b6000815180845260005b8181101561149e57602081850181015186830182015201611482565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006114716020830184611478565b6001600160a01b0381168114610aeb57600080fd5b600080604083850312156114f957600080fd5b8235611504816114d1565b946020939093013593505050565b60008060006060848603121561152757600080fd5b8335611532816114d1565b92506020840135611542816114d1565b929592945050506040919091013590565b60006020828403121561156557600080fd5b8135611471816114d1565b6000806000806060858703121561158657600080fd5b84356003811061159557600080fd5b9350602085013567ffffffffffffffff808211156115b257600080fd5b818701915087601f8301126115c657600080fd5b8135818111156115d557600080fd5b8860208285010111156115e757600080fd5b95986020929092019750949560400135945092505050565b6000806040838503121561161257600080fd5b823561161d816114d1565b9150602083013561162d816114d1565b809150509250929050565b60008060006060848603121561164d57600080fd5b833567ffffffffffffffff81111561166457600080fd5b8401610160818703121561167757600080fd5b95602085013595506040909401359392505050565b60408152600061169f6040830185611478565b90508260208301529392505050565b600181811c908216806116c257607f821691505b6020821081036116e257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561067257634e487b7160e01b600052601160045260246000fd5b60006020828403121561171b57600080fd5b5051919050565b6000808335601e1984360301811261173957600080fd5b83018035915067ffffffffffffffff82111561175457600080fd5b60200191503681900382131561176957600080fd5b9250929050565b60008261178d57634e487b7160e01b600052601260045260246000fd5b500490565b600080858511156117a257600080fd5b838611156117af57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156117e95780818660140360031b1b83161692505b50509291505056fea2646970667358221220bfdaee53ada016e73ed757e2f734c33001bbd771816ed7d1a6cd936aa1b64b9664736f6c63430008120033";

type LegacyTokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LegacyTokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LegacyTokenPaymaster__factory extends ContractFactory {
  constructor(...args: LegacyTokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    accountFactory: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LegacyTokenPaymaster> {
    return super.deploy(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    ) as Promise<LegacyTokenPaymaster>;
  }
  override getDeployTransaction(
    accountFactory: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    );
  }
  override attach(address: string): LegacyTokenPaymaster {
    return super.attach(address) as LegacyTokenPaymaster;
  }
  override connect(signer: Signer): LegacyTokenPaymaster__factory {
    return super.connect(signer) as LegacyTokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegacyTokenPaymasterInterface {
    return new utils.Interface(_abi) as LegacyTokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LegacyTokenPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LegacyTokenPaymaster;
  }
}
