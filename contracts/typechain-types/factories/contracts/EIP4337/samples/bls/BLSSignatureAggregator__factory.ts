/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BLSSignatureAggregator,
  BLSSignatureAggregatorInterface,
} from "../../../../../contracts/EIP4337/samples/bls/BLSSignatureAggregator";

const _abi = [
  {
    inputs: [],
    name: "BLS_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
    ],
    name: "aggregateSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "aggregatedSignature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTrailingPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "userOpToMessage",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "validateUserOpSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "sigForUserOp",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a30806100206000396000f3fe6080604052600436106100b05760003560e01c806364c530cd11610069578063b7620eb41161004e578063b7620eb4146101d8578063c9e525df146101f8578063e3563a4f1461022c57600080fd5b806364c530cd14610198578063a6193531146101b857600080fd5b8063408644311161009a5780634086443114610129578063451711591461015657806357f09b721461016b57600080fd5b80629d9250146100b5578063275e2d79146100fc575b600080fd5b3480156100c157600080fd5b506100e97fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b81565b6040519081526020015b60405180910390f35b34801561010857600080fd5b5061011c6101173660046111a1565b61024c565b6040516100f39190611229565b34801561013557600080fd5b5061014961014436600461146f565b6103b5565b6040516100f391906114a4565b6101696101643660046114d5565b6103e3565b005b34801561017757600080fd5b5061018b61018636600461146f565b61046e565b6040516100f39190611517565b3480156101a457600080fd5b5061011c6101b336600461153f565b61050f565b3480156101c457600080fd5b506100e96101d336600461146f565b61065d565b3480156101e457600080fd5b5061018b6101f336600461157b565b610678565b34801561020457600080fd5b506100e97f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781565b34801561023857600080fd5b506101696102473660046115b0565b6106fc565b606060008267ffffffffffffffff8111156102695761026961123c565b6040519080825280602002602001820160405280156102ae57816020015b60408051808201909152600080825260208201528152602001906001900390816102875790505b50905060005b815181101561034b576000808686848181106102d2576102d2611647565b90506020028101906102e4919061165d565b6102f39061014081019061167e565b81019061030091906116c5565b9150915060405180604001604052808381526020018281525084848151811061032b5761032b611647565b602002602001018190525050508080610343906116fd565b9150506102b4565b506000610378827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476109b0565b805160208083015160405193945061039b93909101918252602082015260400190565b604051602081830303815290604052925050505b92915050565b6103bd611119565b60006103d06103cb8461046e565b610a9b565b90506103dc8382610acb565b9392505050565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff8216600482015273ffffffffffffffffffffffffffffffffffffffff831690630396cb609034906024016000604051808303818588803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b50505050505050565b610476611137565b60408201518051156104925761048b81610678565b9150610509565b826000015173ffffffffffffffffffffffffffffffffffffffff1663e02afbae61c3506040518263ffffffff1660e01b81526004016080604051808303818786fa1580156104e4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103dc9190611716565b50919050565b6060600061052161014084018461167e565b81019061052e9190611789565b9050600061053e610186856117e9565b9050600061055c61054e866117e9565b61055784610a9b565b610acb565b6040517febbdac9100000000000000000000000000000000000000000000000000000000815290915073__$bcb9c8f34bb5a8589c70df5c3c446fa9d6$__9063ebbdac91906105b390869086908690600401611841565b602060405180830381865af41580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f4919061186a565b6106455760405162461bcd60e51b815260206004820152600e60248201527f424c533a2077726f6e672073696700000000000000000000000000000000000060448201526064015b60405180910390fd5b50506040805160208101909152600081529392505050565b60008061066c6103cb8461046e565b90506103dc8382610ba3565b610680611137565b8151608081116106d25760405162461bcd60e51b815260206004820152601660248201527f6461746120746f6f2073686f727420666f722073696700000000000000000000604482015260640161063c565b909101605f198101518252603f198101516020830152601f19810151604083015251606082015290565b6040811461074c5760405162461bcd60e51b815260206004820152601660248201527f424c533a20696e76616c6964207369676e617475726500000000000000000000604482015260640161063c565b600061075a82840184611789565b90508360008167ffffffffffffffff8111156107785761077861123c565b6040519080825280602002602001820160405280156107b157816020015b61079e611137565b8152602001906001900390816107965790505b50905060008267ffffffffffffffff8111156107cf576107cf61123c565b60405190808252806020026020018201604052801561080857816020015b6107f5611119565b8152602001906001900390816107ed5790505b50905060005b838110156108c457600089898381811061082a5761082a611647565b905060200281019061083c919061165d565b610845906117e9565b90506108508161046e565b84838151811061086257610862611647565b60200260200101819052506108938161055786858151811061088657610886611647565b6020026020010151610a9b565b8383815181106108a5576108a5611647565b60200260200101819052505080806108bc906116fd565b91505061080e565b506040517f9141376300000000000000000000000000000000000000000000000000000000815273__$bcb9c8f34bb5a8589c70df5c3c446fa9d6$__906391413763906109199087908690869060040161188c565b602060405180830381865af4158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a919061186a565b6109a65760405162461bcd60e51b815260206004820152601e60248201527f424c533a2076616c69646174655369676e617475726573206661696c65640000604482015260640161063c565b5050505050505050565b60408051808201909152600080825260208201526000836000815181106109d9576109d9611647565b60200260200101516000015190506000846000815181106109fc576109fc611647565b602090810291909101810151015190506001805b8651811015610a7c57610a638484848a8581518110610a3157610a31611647565b6020026020010151600001518b8681518110610a4f57610a4f611647565b60200260200101516020015160018c610bec565b9195509350915080610a74816116fd565b915050610a10565b50610a8983838388610f1f565b90855260208501525091949350505050565b600081604051602001610aae9190611517565b604051602081830303815290604052805190602001209050919050565b610ad3611119565b6000610adf8484610ba3565b905073__$bcb9c8f34bb5a8589c70df5c3c446fa9d6$__63a850a9097fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b83604051602001610b2f91815260200190565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610b5b92919061192a565b6040805180830381865af4158015610b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9b9190611943565b949350505050565b6000610bae83610f8e565b604080516020810192909252810183905230606082015246608082015260a00160405160208183030381529060405280519060200120905092915050565b6000808089158015610bfc575088155b15610c0e575085915084905083610f12565b86158015610c1a575085155b15610c2c575088915087905086610f12565b610c34611137565b8480610c4257610c42611998565b898a0981528480610c5557610c55611998565b81518a0960208201528480610c6c57610c6c611998565b86870960408201528480610c8257610c82611998565b6040820151870960608201526040805160808101909152808680610ca857610ca8611998565b60408401518e0981526020018680610cc257610cc2611998565b60608401518d0981526020018680610cdc57610cdc611998565b83518b0981526020018680610cf357610cf3611998565b60208401518a09905260408101518151919250141580610d1b57506060810151602082015114155b610d675760405162461bcd60e51b815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e73746561640000604482015260640161063c565b610d6f611137565b8580610d7d57610d7d611998565b8251610d8990886119ae565b60408401510881528580610d9f57610d9f611998565b6020830151610dae90886119ae565b60608401510860208201528580610dc757610dc7611998565b8151800960408201528580610dde57610dde611998565b8151604083015109606082015260008680610dfb57610dfb611998565b6060830151610e0a90896119ae565b8880610e1857610e18611998565b602085015180090890508680610e3057610e30611998565b8780610e3e57610e3e611998565b8880610e4c57610e4c611998565b6040850151865109600209610e6190896119ae565b8208905060008780610e7557610e75611998565b8880610e8357610e83611998565b610e8d848b6119ae565b8a80610e9b57610e9b611998565b60408701518851090860208501510990508780610eba57610eba611998565b8880610ec857610ec8611998565b6060850151602087015109610edd908a6119ae565b8208905060008880610ef157610ef1611998565b8980610eff57610eff611998565b8b8f098551099297509095509093505050505b9750975097945050505050565b6000806000610f2e858561103e565b905060008480610f4057610f40611998565b828309905060008580610f5557610f55611998565b828a09905060008680610f6a57610f6a611998565b8780610f7857610f78611998565b8486098a09919a91995090975050505050505050565b80516020808301516040808501518051908401206060860151805190850120608087015160a088015160c089015160e08a01516101008b01516101208c01518051908b0120975160009b610aae9b909a99910173ffffffffffffffffffffffffffffffffffffffff9a909a168a5260208a019890985260408901969096526060880194909452608087019290925260a086015260c085015260e08401526101008301526101208201526101400190565b6000821580159061104f5750818314155b801561105a57508115155b6110a65760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206e756d626572000000000000000000000000000000000000604482015260640161063c565b6000600183825b861561110e576110bd87836119c1565b90508286806110ce576110ce611998565b87806110dc576110dc611998565b8584096110e990896119ae565b86089094509250866110fb81836119e3565b61110590846119ae565b975091506110ad565b509195945050505050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60008083601f84011261116757600080fd5b50813567ffffffffffffffff81111561117f57600080fd5b6020830191508360208260051b850101111561119a57600080fd5b9250929050565b600080602083850312156111b457600080fd5b823567ffffffffffffffff8111156111cb57600080fd5b6111d785828601611155565b90969095509350505050565b6000815180845260005b81811015611209576020818501810151868301820152016111ed565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103dc60208301846111e3565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156112765761127661123c565b60405290565b6040805190810167ffffffffffffffff811182821017156112765761127661123c565b73ffffffffffffffffffffffffffffffffffffffff811681146112c157600080fd5b50565b80356112cf8161129f565b919050565b600082601f8301126112e557600080fd5b813567ffffffffffffffff808211156113005761130061123c565b604051601f8301601f19908116603f011681019082821181831017156113285761132861123c565b8160405283815286602085880101111561134157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000610160828403121561137457600080fd5b61137c611252565b9050611387826112c4565b815260208201356020820152604082013567ffffffffffffffff808211156113ae57600080fd5b6113ba858386016112d4565b604084015260608401359150808211156113d357600080fd5b6113df858386016112d4565b60608401526080840135608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135828401526101209150818401358181111561142f57600080fd5b61143b868287016112d4565b83850152506101409150818401358181111561145657600080fd5b611462868287016112d4565b8385015250505092915050565b60006020828403121561148157600080fd5b813567ffffffffffffffff81111561149857600080fd5b610b9b84828501611361565b60408101818360005b60028110156114cc5781518352602092830192909101906001016114ad565b50505092915050565b600080604083850312156114e857600080fd5b82356114f38161129f565b9150602083013563ffffffff8116811461150c57600080fd5b809150509250929050565b60808101818360005b60048110156114cc578151835260209283019290910190600101611520565b60006020828403121561155157600080fd5b813567ffffffffffffffff81111561156857600080fd5b820161016081850312156103dc57600080fd5b60006020828403121561158d57600080fd5b813567ffffffffffffffff8111156115a457600080fd5b610b9b848285016112d4565b600080600080604085870312156115c657600080fd5b843567ffffffffffffffff808211156115de57600080fd5b6115ea88838901611155565b9096509450602087013591508082111561160357600080fd5b818701915087601f83011261161757600080fd5b81358181111561162657600080fd5b88602082850101111561163857600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b6000823561015e1983360301811261167457600080fd5b9190910192915050565b6000808335601e1984360301811261169557600080fd5b83018035915067ffffffffffffffff8211156116b057600080fd5b60200191503681900382131561119a57600080fd5b600080604083850312156116d857600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b60006001820161170f5761170f6116e7565b5060010190565b60006080828403121561172857600080fd5b82601f83011261173757600080fd5b6040516080810181811067ffffffffffffffff8211171561175a5761175a61123c565b60405280608084018581111561176f57600080fd5b845b8181101561110e578051835260209283019201611771565b60006040828403121561179b57600080fd5b82601f8301126117aa57600080fd5b6117b261127c565b8060408401858111156117c457600080fd5b845b818110156117de5780358452602093840193016117c6565b509095945050505050565b60006103af3683611361565b8060005b60028110156118185781518452602093840193909101906001016117f9565b50505050565b8060005b6004811015611818578151845260209384019390910190600101611822565b610100810161185082866117f5565b61185d604083018561181e565b610b9b60c08301846117f5565b60006020828403121561187c57600080fd5b815180151581146103dc57600080fd5b6000608080830161189d84886117f5565b604084810183905286519182905260209160a086019083890160005b828110156118dc576118cc84835161181e565b92860192908501906001016118b9565b5050508581036060870152865180825290830193508287019060005b8181101561191b5761190b8684516117f5565b94830194918401916001016118f8565b50939998505050505050505050565b828152604060208201526000610b9b60408301846111e3565b60006040828403121561195557600080fd5b82601f83011261196457600080fd5b61196c61127c565b80604084018581111561197e57600080fd5b845b818110156117de578051845260209384019301611980565b634e487b7160e01b600052601260045260246000fd5b818103818111156103af576103af6116e7565b6000826119de57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176103af576103af6116e756fea2646970667358221220d9b749ecfb7aa3d8f9f1d4f698324f9a54fda5bc0b58118498ccf848423db19b64736f6c63430008120033";

type BLSSignatureAggregatorConstructorParams =
  | [
      linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSSignatureAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BLSSignatureAggregator__factory extends ContractFactory {
  constructor(...args: BLSSignatureAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BLSSignatureAggregator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$bcb9c8f34bb5a8589c70df5c3c446fa9d6\\$__", "g"),
      linkLibraryAddresses[
        "contracts/EIP4337/samples/bls/lib/BLSOpen.sol:BLSOpen"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BLSSignatureAggregator> {
    return super.deploy(overrides || {}) as Promise<BLSSignatureAggregator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BLSSignatureAggregator {
    return super.attach(address) as BLSSignatureAggregator;
  }
  override connect(signer: Signer): BLSSignatureAggregator__factory {
    return super.connect(signer) as BLSSignatureAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSSignatureAggregatorInterface {
    return new utils.Interface(_abi) as BLSSignatureAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSSignatureAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BLSSignatureAggregator;
  }
}

export interface BLSSignatureAggregatorLibraryAddresses {
  ["contracts/EIP4337/samples/bls/lib/BLSOpen.sol:BLSOpen"]: string;
}
