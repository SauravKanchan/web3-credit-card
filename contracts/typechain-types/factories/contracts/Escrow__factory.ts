/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_entrypoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bills",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entrypoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "_ops",
        type: "tuple",
      },
    ],
    name: "execute_transaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract USDC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a9c380380610a9c83398101604081905261002f916100d5565b61003833610069565b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610985806101176000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063a65d69d411610076578063bda624501161005b578063bda624501461014a578063f2fde38b1461015d578063fc0c546a1461017057600080fd5b8063a65d69d41461012f578063b00835ed1461014257600080fd5b80630cfba556146100a8578063715018a6146100e95780638da5cb5b146100f3578063900cf0cf14610118575b600080fd5b6100cf6100b6366004610562565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152015b60405180910390f35b6100f1610183565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e0565b61012160045481565b6040519081526020016100e0565b600254610100906001600160a01b031681565b6100f1610197565b6100f1610158366004610651565b6101b6565b6100f161016b366004610562565b6103ef565b600354610100906001600160a01b031681565b61018b610484565b61019560006104de565b565b61019f610484565b600480549060006101af83610780565b9190505550565b6101be610484565b604080516001808252818301909252600091816020015b61023b60405180610160016040528060006001600160a01b03168152602001600081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081525090565b8152602001906001900390816101d55790505090508181600081518110610264576102646107a7565b602002602001018190525060008061028e8460600151602081015160a882015160c8909201519092565b60408051808201825260048054825260208083018581528b516001600160a01b03908116600090815260019384905286902094518555905193909101929092556003548a5193517fa9059cbb00000000000000000000000000000000000000000000000000000000815296985093965092169363a9059cbb9350610328928691016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b91906107bd565b506002546040517f1fad948c0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690631fad948c906103b79086903390600401610825565b600060405180830381600087803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b5050505050505050565b6103f7610484565b6001600160a01b0381166104785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610481816104de565b50565b6000546001600160a01b031633146101955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046f565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461055d57600080fd5b919050565b60006020828403121561057457600080fd5b61057d82610546565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156105be576105be610584565b60405290565b600082601f8301126105d557600080fd5b813567ffffffffffffffff808211156105f0576105f0610584565b604051601f8301601f19908116603f0116810190828211818310171561061857610618610584565b8160405283815286602085880101111561063157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561066357600080fd5b813567ffffffffffffffff8082111561067b57600080fd5b90830190610160828603121561069057600080fd5b61069861059a565b6106a183610546565b8152602083013560208201526040830135828111156106bf57600080fd5b6106cb878286016105c4565b6040830152506060830135828111156106e357600080fd5b6106ef878286016105c4565b6060830152506080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100808401358183015250610120808401358381111561073d57600080fd5b610749888287016105c4565b828401525050610140808401358381111561076357600080fd5b61076f888287016105c4565b918301919091525095945050505050565b6000600182016107a057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156107cf57600080fd5b8151801515811461057d57600080fd5b6000815180845260005b81811015610805576020818501810151868301820152016107e9565b506000602082860101526020601f19601f83011685010191505092915050565b60006040808301818452808651808352606092508286019150828160051b8701016020808a0160005b8481101561092957898403605f19018652815180516001600160a01b03168552610160848201518587015289820151818b88015261088e828801826107df565b915050888201518682038a8801526108a682826107df565b6080848101519089015260a0808501519089015260c0808501519089015260e08085015190890152610100808501519089015261012080850151898303828b015291935091506108f683826107df565b92505050610140808301519250868203818801525061091581836107df565b97850197955050509082019060010161084e565b50508196506109428189018a6001600160a01b03169052565b505050505050939250505056fea264697066735822122039cd7ade97f2c41cc67dbcd0aa62926805a53b0883fbe47cfb3fe117b6d206c264736f6c63430008120033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entrypoint: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Escrow> {
    return super.deploy(
      _entrypoint,
      _token,
      overrides || {}
    ) as Promise<Escrow>;
  }
  override getDeployTransaction(
    _entrypoint: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entrypoint, _token, overrides || {});
  }
  override attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  override connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
